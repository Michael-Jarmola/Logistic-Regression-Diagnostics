### Functions for diagnostics on the models

logit_diagnostics <- function(model, dependent_variable){
  
  summary <- summary(model)
  
  ### Checking for heteroskedasticity
  # Breush Pagan Test 
  # Null: no heteroskedasticity
  bptest <- lmtest::bptest(model)
  robust_model <- lmtest::coeftest(model,
                                   df = Inf, 
                                   vcov = sandwich::vcovHC(model, 
                                                           type = "HC4"))

  # Marginal Effects of Coefficients
  marginal_effects_model <- mfx::logitmfx(formula = model, 
                                          data = model$data, 
                                          atmean = FALSE, 
                                          robust = TRUE)
    
  # McFadden R^2
  # Note: The update function cannot find the data frame of dependent_variable in the function. 
  # It looks for a dataset for dependent_variable outside of the function
  # Therefore, we must create a string and pass it as a formula
  logit0 <- update(object = model, 
                   formula. = as.formula(paste0(dependent_variable, " ~ 1")), 
                   evaluate = TRUE)
  McFadden <- 1 - as.vector(logLik(model)/logLik(logit0))
  
  # Hosmer-Lemeshow Test
  # model$y are the predicted results
  # Null Hypothesis: model ranks propensity scores well. 
  # More importantly, look at "obsSuccess" column to make sure 
  # results are ascending and dont' overlap as propensity scores increase
  hlt_logit <- hoslem.test(x = model$y, y = fitted(model), g = 10)
  
  # Hosmer Lemeshow Ranking Table
  HLTContingencyTable <- data.frame(obsNoSuccess = hlt_logit$observed[,'y0'], 
                                    expNoSuccess = round(hlt_logit$expected[,'yhat0'], digits = 2), 
                                    obsSuccess = hlt_logit$observed[,'y1'], 
                                    expSuccess = round(hlt_logit$expected[,'yhat1'], digits = 2))
  
  # confusion matrix
  truth <- model$y
  prediction <- ifelse(predict(object = model, newdata = model$data, type = 'response') > 0.5, 1, 0)
  xtab <- table(prediction, truth)
  
  # create a list of objects to return
  my_list <- list(summary, 
                  bptest,
                  robust_model,
                  marginal_effects_model,
                  McFadden,
                  hlt_logit,
                  HLTContingencyTable,
                  xtab)
  
  names(my_list) <- c("Summary Table", 
                      "Heteroskedasticity Test", 
                      "Robust SE Model",
                      "Marginal Effects Model",
                      "McFadden Pseudo-R^2",
                      "Hosmer-Lemeshow Test",
                      "Hosemer-Lemeshow Ranking Table",
                      "Confusion Matrix")
  
  return(my_list)
}
